{% if ctx("ssl.letsencrypt", default=False) %}
map $uri $redirect_https {
    ~*^/.well-known/acme-challenge 0;
    default 1;
}
{% endif %}

server {
    listen {{ ctx("nginx.server_ip") }}:80;
    server_name {{ ctx("nginx.server_name") }};
    {% if ctx("ssl.letsencrypt", default=False) %}
    location ^~ /.well-known/acme-challenge {
      root /var/www/html;
    }
    {% endif %}
    if ($redirect_https = 1) {
      rewrite ^ https://$server_name$request_uri permanent;
    }
}

server {
    server_name {{ ctx("nginx.server_name") }};
    listen {{ ctx("nginx.server_ip") }}:443;
    client_max_body_size {{ ctx("nginx.client_max_body_size", default="10M") }};
    keepalive_timeout {{ ctx("nginx.keepalive_timeout", default="50") }};

    # https://stackoverflow.com/questions/34768527/uwsgi-ioerror-write-error
    uwsgi_ignore_client_abort {{ ctx('uwsgi.ignore_client_abort', default="on") }};

    {% if ctx("ssl.letsencrypt", default=False) %}
    ssl on;
    ssl_certificate {{ ctx("ssl.cert") }}; # managed by Certbot
    ssl_certificate_key {{ ctx("ssl.key") }}; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam {{ ctx("ssl.dhparams", default=False) }}; # managed by Certbot
    {% endif %}

    access_log {{ ctx("logs.dirs.root") }}/nginx-access;
    error_log {{ ctx("logs.dirs.root") }}/nginx-error;

    # Deny illegal Host headers
    if ($host !~* ^{{ ctx("nginx.server_name") }}$) {
        return 400;
    }

    location /static {
        expires max;
        alias {{ ctx("django.dirs.static_root") }};
    }

    location /media {
        expires max;
        alias {{ ctx("django.dirs.media_root") }};
    }

    location / {
        include /etc/nginx/uwsgi_params;
        uwsgi_pass unix://{{ ctx("uwsgi.pass") }};
        uwsgi_param UWSGI_FASTROUTER_KEY $host;
        uwsgi_buffering {{ ctx('uwsgi.buffering', default="off") }};
        proxy_set_header X-Forwarded-Protocol $scheme;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass_header Server;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;
    }
}
